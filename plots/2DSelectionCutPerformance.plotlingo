#
# What does NTrack look like?
#

include ("common.plotlingo");

#
# These are 2D plots, so we really don't want stats boxes.
#
TurnOffStatBoxes();
UseSmoothGradient();

#
# All the types of plots
#

plottypes = [
	{title => "CalRatio vs Jet pT", name => "CalRvspT", xcut=>true, ycut=>true},
	{title => "NTrack vs Jet pT", name => "NTrkvspT", xcut=>false, ycut=>true},
	{title => "SumPT vs Jet pT", name => "SumPtvspT", xcut=>false, ycut=>true},
	{title => "MaxPT vs Jet pT", name => "MaxPtvspT", xcut=>false, ycut=>true},
	{title => "CalRatio vs NTrk", name => "CalRvsNTrk", xcut=>true, ycut=>false},
	{title => "CalRatio vs SumPt", name => "CalRvsSumPt", xcut=>true, ycut=>false},
	{title => "CalRatio vs MaxPt", name => "CalRvsMaxTrk", xcut=>true, ycut=>false}
];

#
# Plots of CalR vs pT per sample for the signal.
#
for (plottypes) {
	for (sample, samples) {
	  f.Get("{sample}/signal/{name}withLLPInCal")
		.asEfficiency(xcut, ycut)
		.plot()
		.size(1200, 800)
		.addDrawOption("COLZ")
		.title("{title} for Sample {sample}");
	};

	# Same for the background.

	f.Get("200-25/background/{name}all")
		.asEfficiency(xcut, ycut)
		.plot()
		.size(1200, 800)
		.addDrawOption("COLZ")
		.title("{title} for QCD");
};
